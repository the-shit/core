name: 💩 Quality Checks

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  quality:
    name: 💩 THE SHIT Quality
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.2', '8.3']
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, json, mbstring, pdo
          tools: composer:v2
          coverage: none
      
      - name: 📋 Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      
      - name: 💾 Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ matrix.php-version }}-composer-
      
      - name: 📚 Install dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
      
      - name: 💩 Run Quality Checks
        run: |
          echo "Running THE SHIT Quality Checks on PHP ${{ matrix.php-version }}"
          php 💩 quality --no-interaction
      
      - name: 📝 Upload Quality Report (if failed)
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: quality-report-php-${{ matrix.php-version }}
          path: |
            storage/logs/
            .phpunit.result.cache
            phpstan.neon
      
  code-style:
    name: 📝 Code Style (Pint)
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
          tools: composer:v2
          coverage: none
      
      - name: 📚 Install dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
      
      - name: 🎨 Check code style
        run: ./vendor/bin/pint --test
      
      - name: 💡 Suggest fixes (if failed)
        if: failure()
        run: |
          echo "Code style issues found! Run 'php 💩 quality --fix' locally to auto-fix."
          ./vendor/bin/pint --test --format=json > pint-report.json || true
      
      - name: 📤 Upload Pint report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: pint-report
          path: pint-report.json
  
  static-analysis:
    name: 🔍 Static Analysis (Larastan)
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite
          tools: composer:v2
          coverage: none
      
      - name: 📚 Install dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
      
      - name: 🔬 Run static analysis
        run: ./vendor/bin/phpstan analyse --memory-limit=512M --error-format=github
  
  tests:
    name: 🧪 Tests (Pest)
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.2', '8.3']
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐘 Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, json, mbstring, pdo
          tools: composer:v2
          coverage: none
      
      - name: 📚 Install dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
      
      - name: 🧪 Run tests
        run: ./vendor/bin/pest --colors=always
      
      - name: 📊 Upload test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-php-${{ matrix.php-version }}
          path: tests/_output/

  quality-summary:
    name: 📊 Quality Summary
    runs-on: ubuntu-latest
    needs: [quality, code-style, static-analysis, tests]
    if: always()
    
    steps:
      - name: 💩 THE SHIT Quality Status
        run: |
          echo "========================================"
          echo "    💩 THE SHIT Quality Check Summary    "
          echo "========================================"
          
          if [ "${{ needs.quality.result }}" == "success" ]; then
            echo "✅ Overall Quality: PASSED"
          else
            echo "❌ Overall Quality: FAILED"
          fi
          
          echo ""
          echo "Individual Checks:"
          echo "  📝 Code Style: ${{ needs.code-style.result }}"
          echo "  🔍 Static Analysis: ${{ needs.static-analysis.result }}"
          echo "  🧪 Tests: ${{ needs.tests.result }}"
          echo ""
          
          if [ "${{ needs.quality.result }}" == "success" ]; then
            echo "🎉 Your code is THE SHIT (in a good way)!"
          else
            echo "💡 Run 'php 💩 quality --fix' locally to fix issues"
          fi
          
          echo "========================================"
      
      - name: 🚫 Fail if quality checks failed
        if: |
          needs.quality.result == 'failure' ||
          needs.code-style.result == 'failure' ||
          needs.static-analysis.result == 'failure' ||
          needs.tests.result == 'failure'
        run: exit 1